name: CI (lint + tests)

on:
  # Триггеры:
  push:
    branches: [ master ]      # запускать при пуше в master
    # paths-ignore:           # при желании можно игнорировать изменения в доке/картинках
    #   - '**/*.md'
    #   - 'docs/**'
  pull_request:
    branches: [ master ]      # и при открытии/обновлении PR в master

# Чтобы параллельные запуски одного и того же ref не дублировались
concurrency:
  group: ci-${{ github.ref }}
  cancel-in-progress: true

jobs:
  lint:
    name: Lint (ESLint)
    runs-on: ubuntu-latest

    steps:
      # 1) Забираем код
      - name: Checkout
        uses: actions/checkout@v4

      # 2) Устанавливаем Node и кешируем зависимости Yarn
      # cache: 'yarn' кеширует по yarn.lock
      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: yarn

      # 3) (Опционально) Включаем Corepack, если используете Yarn Berry (>= v3) с "packageManager" в package.json
      - name: Enable Corepack (Yarn Berry)
        run: corepack enable

      # 4) Устанавливаем зависимости.
      # Для Yarn Classic (v1) корректный флаг — --frozen-lockfile,
      # для Yarn Berry (v3+) — --immutable. Делаем попытку berry, затем fallback на classic.
      - name: Install deps
        run: |
          echo "Yarn version: $(yarn --version)"
          yarn install --immutable || yarn install --frozen-lockfile

      # 5) ESLint (скрипт "lint" уже должен быть в package.json)
      - name: Run ESLint
        run: yarn lint

  test:
    name: Unit tests (Vitest)
    runs-on: ubuntu-latest
    needs: lint   # сначала должен успешно пройти линт

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: yarn

      - name: Enable Corepack (Yarn Berry)
        run: corepack enable

      - name: Install deps
        run: |
          echo "Yarn version: $(yarn --version)"
          yarn install --immutable || yarn install --frozen-lockfile

      # Vitest прогон (если хочешь покрытие — см. следующий шаг)
      - name: Run unit tests
        run: yarn test

